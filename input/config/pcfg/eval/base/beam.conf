# Config for jazzparser
# Uses a trained model to evaluate all sequences in all partitions of the data.
# Base config for experiments to test different beam settings
# A script for running a suite of experiments (bin/pcfg/beam_suite.py) 
#  dynamically generates config files that inherit from this

# Must be included in another file
# Inheriting configs should specify:
#  threshold, maxarc
%% ABSTRACT

# Input sequences
file           = %{PROJECT_ROOT}/input/fullseqs
filetype       = bulk-db

# Tagger type
supertagger    = ngram-multi
# Increase the tagger beam with over the default
tagger-options = batch=0.1:model=bigram

# Divide into 10 partitions
partitions     = 10
# Use the pcfg parser
parser         = pcfg
# Stop after 2h if we've not found anything
# Set the beam settings specified in the inheriting config
parser-options = model=chords:timeout=120:threshold=%{threshold}:maxarc=%{maxarc}

# Output parse results to a file
output      = %{PROJECT_ROOT}/etc/output/pcfg/beam/%{threshold}-%{maxarc}/
# Output progress info to a file
logger      = %{PROJECT_ROOT}/etc/tmp/pcfg/beam/%{threshold}-%{maxarc}/
# Only store 1 result: we're only going to look at the top one
topn        = 1

processes   = 8
# Select just a few short sequences
indices     = 15,19,24,53,56,37,60,72

+no-results
